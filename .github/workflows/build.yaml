#===============================================================================
# Build pipeline for pull requests
#===============================================================================
name: build

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

on:
  push:
    branches:
    - main
    tags:
      - "v*"
  pull_request:

permissions:
  contents: write
  id-token: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: 📚 Checkout (GitHub)
      uses: actions/checkout@v4
  
    - name: 🛠️ Install build dependencies (Go 1.22)
      uses: actions/setup-go@v5
      with:
        go-version: "1.22"
        cache: true

    - name: 🗄 Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          /go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: 🛠️ Install build dependencies (Go packages)
      run: |
        go install gotest.tools/gotestsum@latest
        go install github.com/goreleaser/goreleaser/v2@latest

    - name: 🧪 Check formatting
      run: |
        STATUS=0
        assert-nothing-changed() {
          local diff
          "$@" >/dev/null || return 1
          if ! diff="$(git diff -U1 --color --exit-code)"; then
            printf '\e[31mError: running `\e[1m%s\e[22m` results in modifications that you must check into version control:\e[0m\n%s\n\n' "$*" "$diff" >&2
            git checkout -- .
            STATUS=1
          fi
        }

        assert-nothing-changed go fmt ./...
        assert-nothing-changed go mod tidy

        exit $STATUS

    - name: 🧪 Run linter to verify codebase (ci-lint 1.58.1)
      uses: golangci/golangci-lint-action@v6
      with:
        version: v1.58.1
        skip-cache: true

    - name: 📦 Build
      run: make build

    - name: 🧪 Run tests
      run: make test

    - name: 🛠️ Login to GitHub Container Registry
      if: startsWith(github.ref, 'refs/tags/v')
      uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CI_TOKEN }}

    - name: 🚀 Publish release
      if: startsWith(github.ref, 'refs/tags/v')
      run: goreleaser --clean
      env:
        GITHUB_TOKEN: ${{ secrets.CI_TOKEN }}

    # If we're not on a tag, we'll still run the snapshot packaging to ensure
    # that the configuration is correct.
    - name: 🚀 Publish release (snapshot)
      if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
      run: goreleaser --snapshot --clean
